Screen1 As screen:
    OnVisible: =

    myCmpCountPrimes As cmpCountPrimes:
        Height: =251
        OnReset: |
            =Set(varTimeStart, Now());
            
            // ** Generate the sieve
            
            // Determine the number of rows in the initial sieve
            Set(varSieveSize, RoundDown((myCmpCountPrimes.UpTo - 1) / 2, 0));
            
            // Clear the sieve from previous any previous runs
            Clear(colSieve);
            
            // Determine number of whole iterations of 50,000 required
            Set(varWholeIterations, RoundDown(varSieveSize / 50000, 0));
            
            // Generate prime candidates for whole iterations of 50,000, i.e. 1 .. 50,000, 50,001 .. 100,000
            ForAll(
                Sequence(varWholeIterations),
                With(
                    { outer: Value - 1 },
                    ForAll(
                        Sequence(50000),
                        Collect(colSieve, 1 + (((50000 * outer) + Value) * 2));
                    )
                )
            );
            
            // Generate remaining prime candidates
            ForAll(
                Sequence(Mod(varSieveSize, 50000)),
                Collect(colSieve, 1 + (((50000 * varWholeIterations) + Value) * 2));
            );
            
            // ** Filter the sieve
            
            // Copy the sieve so that we can use it as the iterator.  We only need to copy up to the sqrt
            Set(colSourceSieve, Filter(colSieve, Value <= Sqrt(myCmpCountPrimes.UpTo)));
            
            // Remove elements from the sieve
            ForAll(
                colSourceSieve,
                With(
                    { n: Value },
                    RemoveIf(
                        colSieve, 
                        ThisRecord.Value >= Power(n, 2),
                        Mod(ThisRecord.Value, n) = 0
                    )
                )
            );
            
            // ** Prime numbers generated
            
            // Add 1 because 2 is a prime number
            Set(varNumPrimes, 1 + Count(colSieve));
            
            // Report how long we took
            Set(varTimeEnd, Now());
            Set(varDuration, DateDiff(varTimeStart, varTimeEnd, Milliseconds));
        UpTo: =Value(txtUpTo.Text)
        Y: =440

    "galExpectedPrimes As gallery.'BrowseLayout_Vertical_OneTextVariant_ver4.0'":
        Height: =340
        Items: =primeCounts
        Layout: =Layout.Vertical
        TemplatePadding: =0
        TemplateSize: =56
        Y: =795
        ZIndex: =1

        UpTo As label:
            Height: =42
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.sieveSize
            VerticalAlign: =VerticalAlign.Top
            Width: =133
            X: =15
            Y: =7
            ZIndex: =1

        Separator As rectangle:
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =3

        numPrimes As label:
            Height: =42
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.primes
            VerticalAlign: =VerticalAlign.Top
            Width: =133
            X: =161
            Y: =7
            ZIndex: =4

    btnRun As button:
        Height: =72
        OnSelect: |
            =Reset(myCmpCountPrimes);
        Size: =24
        Text: ="Calculate"
        Width: =548
        X: =41
        Y: =190
        ZIndex: =6

    txtUpTo As text:
        Default: =1000
        Height: =57
        Size: =21
        Width: =268
        X: =308
        Y: =84
        ZIndex: =9

    lblUpTo As label:
        Height: =70
        Size: =21
        Text: ="Find Primes Up to"
        Width: =273
        X: =35
        Y: =78
        ZIndex: =10

    lblOutput As label:
        Height: =184
        Size: =21
        Text: |-
            ="Number of primes: " & myCmpCountPrimes.NumPrimes & Char(13) &
            "Duration: " & myCmpCountPrimes.Duration & " ms"
        Width: =559
        X: =46
        Y: =262
        ZIndex: =14

    Label1 As label:
        Height: =52
        Size: =21
        Text: ="UpTo"
        Width: =98
        Y: =743
        ZIndex: =15

    Label1_1 As label:
        Height: =52
        Size: =21
        Text: ="Num Primes"
        Width: =259
        X: =156
        Y: =743
        ZIndex: =16

    Label1_2 As label:
        Color: =RGBA(255, 255, 255, 1)
        Fill: =RGBA(151, 0, 0, 1)
        FontWeight: =FontWeight.Bold
        Height: =52
        Size: =21
        Text: ="Reference Table"
        Width: =640
        Y: =691
        ZIndex: =17

